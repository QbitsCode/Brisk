@keyframes laser {
  0% {
    stroke-dasharray: 40 1;
    stroke-dashoffset: 41;
    opacity: 1;
  }
  100% {
    stroke-dasharray: 40 1;
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

.laser-beam-internal {
  stroke: #22c55e;
  stroke-width: 2;
  filter: drop-shadow(0 0 4px rgba(34, 197, 94, 0.9))
         drop-shadow(0 0 8px rgba(34, 197, 94, 0.6));
  opacity: 1;
}

.laser-beam {
  stroke: #22c55e;
  stroke-width: 1.5;
  filter: drop-shadow(0 0 2px rgba(34, 197, 94, 1))
         drop-shadow(0 0 4px rgba(34, 197, 94, 0.8))
         drop-shadow(0 0 8px rgba(34, 197, 94, 0.4));
  animation: laser 0.25s linear infinite;
}

.laser-beam-entangled {
  stroke: #8b5cf6;
  stroke-width: 1.5;
  filter: drop-shadow(0 0 2px rgba(139, 92, 246, 1))
         drop-shadow(0 0 4px rgba(139, 92, 246, 0.8))
         drop-shadow(0 0 8px rgba(139, 92, 246, 0.4));
  animation: laser 0.25s linear infinite;
}

.laser-beam-internal-entangled {
  stroke: #8b5cf6;
  stroke-width: 2;
  filter: drop-shadow(0 0 4px rgba(139, 92, 246, 0.9))
         drop-shadow(0 0 8px rgba(139, 92, 246, 0.6));
  opacity: 1;
}

@keyframes detector-active {
  0% {
    filter: drop-shadow(0 0 2px rgba(225, 29, 72, 0.5));
    transform: scale(1);
  }
  50% {
    filter: drop-shadow(0 0 8px rgba(225, 29, 72, 0.8));
    transform: scale(1.1);
  }
  100% {
    filter: drop-shadow(0 0 2px rgba(225, 29, 72, 0.5));
    transform: scale(1);
  }
}

.detector-active {
  animation: detector-active 0.5s ease-in-out infinite;
}

@keyframes component-appear {
  from {
    opacity: 0;
    transform: scale(0.8) translateY(10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.component-appear {
  animation: component-appear 0.3s ease-out forwards;
}

/* Enhanced 3D shadows for components */
.quantum-component {
  filter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.1)) 
         drop-shadow(0 1px 3px rgba(0, 0, 0, 0.2));
  transition: all 0.3s ease;
}

.quantum-component:hover {
  filter: drop-shadow(2px 6px 8px rgba(0, 0, 0, 0.15)) 
         drop-shadow(0 2px 4px rgba(0, 0, 0, 0.25));
  transform: translateY(-1px);
}

.quantum-component:active {
  transform: translateY(0);
  filter: drop-shadow(1px 2px 4px rgba(0, 0, 0, 0.1));
}

/* Component type-specific styles */
.component-source {
  filter: drop-shadow(0 0 4px rgba(34, 197, 94, 0.3));
}

.component-entangled {
  filter: drop-shadow(0 0 4px rgba(139, 92, 246, 0.3));
}

.component-beamsplitter {
  filter: drop-shadow(0 0 4px rgba(59, 130, 246, 0.3));
}

.component-phaseshift {
  filter: drop-shadow(0 0 4px rgba(245, 158, 11, 0.3));
}

.component-waveplate {
  filter: drop-shadow(0 0 4px rgba(6, 182, 212, 0.3));
}

.component-mirror {
  filter: drop-shadow(0 0 4px rgba(148, 163, 184, 0.3));
}

.component-detector {
  filter: drop-shadow(0 0 4px rgba(225, 29, 72, 0.3));
}

/* Dragging states */
.dragging {
  opacity: 0.6;
  cursor: grabbing;
}

.can-drop {
  background-color: rgba(34, 197, 94, 0.1);
}
